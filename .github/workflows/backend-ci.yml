name: Backend CI

on:
  push:
    branches: ['**']
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: ['main']
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  lint-and-test:
    name: Backend Lint & Test
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./backend

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin123
          POSTGRES_DB: sga_pro_db_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev --system

      - name: Lint with flake8
        run: |
          pip install flake8
          # Stop the build if there are Python syntax errors or undefined names
          flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings
          flake8 app/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        continue-on-error: true

      - name: Check code formatting with black
        run: |
          pip install black
          black --check app/
        continue-on-error: true

      - name: Verify database models
        env:
          DATABASE_URL: postgresql://admin:admin123@localhost:5432/sga_pro_db_test
        run: |
          python -c "from app.core.database import Base, engine; from app.models import *; Base.metadata.create_all(bind=engine); print('✓ Models verified successfully')"

      - name: Run tests (when implemented)
        env:
          DATABASE_URL: postgresql://admin:admin123@localhost:5432/sga_pro_db_test
        run: |
          pip install pytest pytest-cov
          # pytest tests/ --cov=app --cov-report=xml
          echo "✓ Tests will run here when implemented"
        continue-on-error: true

  security-check:
    name: Security Scan
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv safety

      - name: Check for security vulnerabilities
        run: |
          pipenv requirements > requirements.txt
          safety check --file=requirements.txt
        continue-on-error: true

  build-status:
    name: Backend Build Status
    runs-on: ubuntu-latest
    needs: [lint-and-test, security-check]
    if: always()
    
    steps:
      - name: Check build status
        run: |
          echo "Backend CI completed"
          echo "Lint & Test: ${{ needs.lint-and-test.result }}"
          echo "Security Check: ${{ needs.security-check.result }}"

