name: Frontend CI

on:
  push:
    branches: ['**']
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: ['main']
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'

jobs:
  lint-and-build:
    name: Frontend Lint & Build
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
        continue-on-error: true

      - name: TypeScript type checking
        run: npx tsc --noEmit
        continue-on-error: true

      - name: Build Next.js application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Check build size
        run: |
          echo "Build completed successfully!"
          ls -lh .next/
          du -sh .next/

  test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests (when implemented)
        run: |
          # npm test -- --coverage
          echo "âœ“ Tests will run here when implemented"
        continue-on-error: true

  build-status:
    name: Frontend Build Status
    runs-on: ubuntu-latest
    needs: [lint-and-build, test]
    if: always()
    
    steps:
      - name: Check build status
        run: |
          echo "Frontend CI completed"
          echo "Lint & Build: ${{ needs.lint-and-build.result }}"
          echo "Tests: ${{ needs.test.result }}"

